<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monte Carlo String/M-theory Collaboration</title>
    <link>/</link>
    <description>Recent content on Monte Carlo String/M-theory Collaboration</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 28 Jan 2018 21:48:10 +0100</lastBuildDate>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Code sample</title>
      <link>/code/sample/</link>
      <pubDate>Sun, 28 Jan 2018 21:48:10 +0100</pubDate>
      
      <guid>/code/sample/</guid>
      <description>We will include code samples, like this simple Metropolis algorithm
#include &amp;lt;stdio.h&amp;gt;#include &amp;lt;stdlib.h&amp;gt;#include &amp;lt;math.h&amp;gt;#include &amp;lt;time.h&amp;gt; int main(void){ int iter,niter=100; int naccept; double step_size=0.5e0; double x,backup_x,dx; double action_init, action_fin; double metropolis; srand((unsigned)time(NULL)); /*********************************/ /* Set the initial configuration */ /*********************************/ x=0e0; naccept=0; /*************/ /* Main loop */ /*************/ for(iter=1;iter&amp;lt;niter+1;iter++){ backup_x=x; action_init=0.5e0*x*x; dx = (double)rand()/RAND_MAX; dx=(dx-0.5e0)*step_size*2e0; x=x+dx; action_fin=0.5e0*x*x; /*******************/ /* Metropolis test */ /*******************/ metropolis = (double)rand()/RAND_MAX; if(exp(action_init-action_fin) &amp;gt; metropolis) /* accept */ naccept=naccept+1; else /* reject */ x=backup_x; /***************/ /* data output */ /***************/ printf(&amp;#34;%f\n&amp;#34;,x);} }</description>
    </item>
    
  </channel>
</rss>